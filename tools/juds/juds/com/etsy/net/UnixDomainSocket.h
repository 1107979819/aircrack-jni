/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_etsy_net_UnixDomainSocket */

#ifndef _Included_com_etsy_net_UnixDomainSocket
#define _Included_com_etsy_net_UnixDomainSocket
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_etsy_net_UnixDomainSocket
 * Method:    nativeCreate
 * Signature: (Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_etsy_net_UnixDomainSocket_nativeCreate
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     com_etsy_net_UnixDomainSocket
 * Method:    nativeListen
 * Signature: (Ljava/lang/String;II)I
 */
JNIEXPORT jint JNICALL Java_com_etsy_net_UnixDomainSocket_nativeListen
  (JNIEnv *, jclass, jstring, jint, jint);

/*
 * Class:     com_etsy_net_UnixDomainSocket
 * Method:    nativeAccept
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_etsy_net_UnixDomainSocket_nativeAccept
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_etsy_net_UnixDomainSocket
 * Method:    nativeOpen
 * Signature: (Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_etsy_net_UnixDomainSocket_nativeOpen
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     com_etsy_net_UnixDomainSocket
 * Method:    nativeRead
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_com_etsy_net_UnixDomainSocket_nativeRead
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint);

/*
 * Class:     com_etsy_net_UnixDomainSocket
 * Method:    nativeWrite
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_com_etsy_net_UnixDomainSocket_nativeWrite
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint);

/*
 * Class:     com_etsy_net_UnixDomainSocket
 * Method:    nativeClose
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_etsy_net_UnixDomainSocket_nativeClose
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_etsy_net_UnixDomainSocket
 * Method:    nativeCloseInput
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_etsy_net_UnixDomainSocket_nativeCloseInput
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_etsy_net_UnixDomainSocket
 * Method:    nativeCloseOutput
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_etsy_net_UnixDomainSocket_nativeCloseOutput
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_etsy_net_UnixDomainSocket
 * Method:    nativeUnlink
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_etsy_net_UnixDomainSocket_nativeUnlink
  (JNIEnv *, jclass, jstring);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_etsy_net_UnixDomainSocket_UnixDomainSocketReadThread */

#ifndef _Included_com_etsy_net_UnixDomainSocket_UnixDomainSocketReadThread
#define _Included_com_etsy_net_UnixDomainSocket_UnixDomainSocketReadThread
#ifdef __cplusplus
extern "C" {
#endif
#undef com_etsy_net_UnixDomainSocket_UnixDomainSocketReadThread_MIN_PRIORITY
#define com_etsy_net_UnixDomainSocket_UnixDomainSocketReadThread_MIN_PRIORITY 1L
#undef com_etsy_net_UnixDomainSocket_UnixDomainSocketReadThread_NORM_PRIORITY
#define com_etsy_net_UnixDomainSocket_UnixDomainSocketReadThread_NORM_PRIORITY 5L
#undef com_etsy_net_UnixDomainSocket_UnixDomainSocketReadThread_MAX_PRIORITY
#define com_etsy_net_UnixDomainSocket_UnixDomainSocketReadThread_MAX_PRIORITY 10L
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_etsy_net_UnixDomainSocket_UnixDomainSocketOutputStream */

#ifndef _Included_com_etsy_net_UnixDomainSocket_UnixDomainSocketOutputStream
#define _Included_com_etsy_net_UnixDomainSocket_UnixDomainSocketOutputStream
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_etsy_net_UnixDomainSocket_UnixDomainSocketInputStream */

#ifndef _Included_com_etsy_net_UnixDomainSocket_UnixDomainSocketInputStream
#define _Included_com_etsy_net_UnixDomainSocket_UnixDomainSocketInputStream
#ifdef __cplusplus
extern "C" {
#endif
#undef com_etsy_net_UnixDomainSocket_UnixDomainSocketInputStream_MAX_SKIP_BUFFER_SIZE
#define com_etsy_net_UnixDomainSocket_UnixDomainSocketInputStream_MAX_SKIP_BUFFER_SIZE 2048L
#ifdef __cplusplus
}
#endif
#endif
